<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frombusan.repository.ReviewMapper">

    <!--  게시글 저장  -->
    <insert id="saveReview">
        INSERT INTO review (title, contents, member_id, review_place)
        SELECT #{title}, #{contents}, #{member_id}, #{review_place}
        WHERE EXISTS (
        SELECT 1 FROM (
            SELECT main_title FROM tourist_spot
            UNION
            SELECT main_title FROM festival
            ) AS places
            WHERE places.main_title = #{review_place}
        );
    </insert>

    <!--  전체 게시글 갯수  -->
    <select id="getTotal" resultType="int">
        select count(*) from review
        <if test="_parameter != null">
            where title like '%' || #{searchText} || '%'
        </if>
    </select>

    <!--  전체 게시글 검색  -->
    <select id="findReviews" resultType="review">
        select review_id,review_place,member_id,title,created_time,hit,review_like
        from review
        <if test="_parameter != null">
            where review_place like '%' || #{searchText} || '%'
        </if>
        order by created_time desc
    </select>

    <!--  게시글 아이디로 검색  -->
    <select id="findReview" resultType="review">
        select review_id,review_place,member_id,title,created_time,hit,contents
        from review where review_id = #{review_id}
    </select>

    <!--  게시글 수정  -->
    <update id="updateReview">
        update review
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="contents != null">contents = #{contents},</if>
            <if test="hit != null">hit = #{hit},</if>
            <if test="review_like != null">review_like = #{review_like},</if>
        </set>
        where review_id = #{review_id}
    </update>

    <!--  게시글 삭제  -->
    <delete id="removeReview">
        delete from review where review_id = #{review_id}
    </delete>

    <!-- /////////////////특정 리뷰찾기  기능//////////////////////////////////////////////////////////////// -->
    <select id="findReviewsByMainTitle" resultType="review">
        select review_id,review_place,member_id,title,created_time,hit
        from review where review_place=#{review_place} order by created_time desc
    </select>

    <!-- /// 작성한 유저의 게시물//////////////////  -->
    <select id="findReviewsByMemberId" resultType="review">
        select review_id,review_place,member_id,title,created_time,hit
        from review where member_id = #{member_id} order by created_time desc
    </select>

    <select id="findLikesById" resultType="map">
        select member_id,like_id from review_like where review_id=#{review_id}
    </select>

    <insert id="saveLikes">
        <selectKey keyProperty="like_id" resultType="long" order="BEFORE">
            select seq_review.nextval from dual
        </selectKey>
        insert into review_like (
        like_id,
        member_id,
        review_id
        ) values (
        #{like_id},
        #{member_id},
        #{review_id}
        )
    </insert>

    <delete id="deleteLike">
        delete from review_like where like_id = #{like_id}
    </delete>

    <!--  게시글 아이디로 검색  -->
    <select id="findReviewRank5" resultType="review">
        SELECT review_id, review_place, member_id, title, created_time, hit,review_like
        FROM (
        SELECT review_id, review_place, member_id, title, created_time, hit,review_like,
        ROW_NUMBER() OVER (ORDER BY review_like DESC) AS rnum
        FROM review
        )
        WHERE rnum BETWEEN 1 AND 3
    </select>

    <!-- 타이틀 조회-->
    <select id="findAllMainTitle" resultType="String">
        SELECT main_title FROM tourist_Spot UNION SELECT main_title FROM festival
    </select>

    <select id="checkMemberLikeStatus" resultType="boolean">
        SELECT CASE
        WHEN EXISTS (
        SELECT 1 FROM review_like
        WHERE review_id = #{review_id}
        AND member_id = #{member_id}
        )
        THEN TRUE
        ELSE FALSE
        END AS isFavorite
    </select>

</mapper>